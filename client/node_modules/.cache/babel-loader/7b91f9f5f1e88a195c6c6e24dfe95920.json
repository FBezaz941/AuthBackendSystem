{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fattah\\\\Desktop\\\\MERNAUTH2\\\\AuthBackendSystem\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\nfunction AuthContextProvider(props) {\n  _s();\n\n  const [loggedIn, setLoggedIn] = useState(undefined);\n\n  async function getLoggedIn() {\n    const loggedInRes = await axios.get(\"http://localhost:5000/auth/loggedIn\");\n    setLoggedIn(loggedInRes.data);\n  }\n\n  useEffect(() => {\n    getLoggedIn();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      loggedIn,\n      getLoggedIn\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthContextProvider, \"81emVA+KGXopSnfrhBepOR4HVzY=\");\n\n_c = AuthContextProvider;\n;\nexport default AuthContext;\nexport { AuthContextProvider }; //the children aka the components of the APP will now have props sent to \n//them from auth context provider allowthem to distinguish between loggedin \n//or\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/Fattah/Desktop/MERNAUTH2/AuthBackendSystem/client/src/context/AuthContext.js"],"names":["axios","React","createContext","useEffect","useState","AuthContext","AuthContextProvider","props","loggedIn","setLoggedIn","undefined","getLoggedIn","loggedInRes","get","data","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;;AACA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;;AAEA,SAASI,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAClC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAACM,SAAD,CAAxC;;AACA,iBAAeC,WAAf,GAA6B;AAC3B,UAAMC,WAAW,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,qCAAV,CAA1B;AACAJ,IAAAA,WAAW,CAACG,WAAW,CAACE,IAAb,CAAX;AACD;;AACDX,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEH,MAAAA,QAAF;AAAYG,MAAAA;AAAZ,KAA7B;AAAA,cACGJ,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAdQT,mB;;KAAAA,mB;AAcR;AAED,eAAeD,WAAf;AACA,SAASC,mBAAT,G,CAGA;AACA;AACA","sourcesContent":["import axios from \"axios\";\r\nimport React, { createContext, useEffect, useState } from \"react\";\r\nconst AuthContext = createContext();\r\n\r\nfunction AuthContextProvider(props) {\r\n  const [loggedIn, setLoggedIn] = useState(undefined);\r\n  async function getLoggedIn() {\r\n    const loggedInRes = await axios.get(\"http://localhost:5000/auth/loggedIn\");\r\n    setLoggedIn(loggedInRes.data);\r\n  }\r\n  useEffect(() => {\r\n    getLoggedIn();\r\n  }, []);\r\n  return (\r\n    <AuthContext.Provider value={{ loggedIn, getLoggedIn }}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\nexport { AuthContextProvider };\r\n\r\n\r\n//the children aka the components of the APP will now have props sent to \r\n//them from auth context provider allowthem to distinguish between loggedin \r\n//or"]},"metadata":{},"sourceType":"module"}